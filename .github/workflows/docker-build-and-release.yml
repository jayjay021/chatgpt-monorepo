name: Docker Build and Release

permissions:
  contents: write
  packages: write

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Build Docker images
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: "--debug"

      - name: Build and Push Docker Images
        run: |
          packages=$(ls -d */ | grep -v 'node_modules/')
          for pkg in $packages; do
            if [ -f "$pkg/Dockerfile" ]; then
              echo "Building Docker image for $pkg"
              VERSION=$(npx semantic-release --dry-run | grep 'Next version:' | awk '{print $3}')
              docker buildx build --file "$pkg/Dockerfile" \
                --tag ghcr.io/${{ github.repository_owner }}/${pkg%/}:$VERSION \
                --tag ghcr.io/${{ github.repository_owner }}/${pkg%/}:latest \
                --push .
            fi
          done

      - name: Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub tags
        run: |
          VERSION=$(npx semantic-release --dry-run | grep 'Next version:' | awk '{print $3}')
          git tag "v${VERSION}"
          git push origin "v${VERSION}"

      - name: Upload release notes
        uses: actions/upload-artifact@v3
        with:
          name: release-notes
          path: release-notes.md
